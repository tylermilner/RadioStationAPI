openapi: 3.0.0
info:
  version: 0.0.1
  title: Radio Station API
servers:
  - url: "http://localhost:8080"
paths:
  /config:
    get:
      summary: "Get station configuration info"
      operationId: getConfig
      tags:
        - config
      responses:
        "200":
          description: "Details about the station configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
        "404":
          description: "No station configuration exists. Create one by issuing a POST."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: "Create station configuration info"
      operationId: postConfig
      tags:
        - config
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        "200":
          description: "The station configuration that was created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        "400":
          description: "Either a station configuration already exists or there was a problem with the format of the request. Check the error for details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
    patch:
      summary: "Update station configuration info"
      operationId: patchConfig
      tags:
        - config
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Config"
      responses:
        "200":
          description: "The updated station configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /authenticate:
    post:
      summary: "Authenticate with the station"
      operationId: postAuthenticate
      tags:
        - authenticate
      security:
        - APIKeyAuth: []
      requestBody:
        description: "Authentication credentials"
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AuthenticationRequest"
      responses:
        "200":
          description: "Access token that can be used to access protected functions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResponse"
        "401":
          description: "Invalid credentials"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"
  
  /shows:
    get:
      summary: "Get list of shows"
      operationId: getShows
      tags:
        - shows
      responses:
        "200":
          description: "Shows"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfShows"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: "Create show"
      operationId: postShows
      tags:
        - shows
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Show'
      responses:
        "201":
          description: "The show that was created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /shows/{id}:
    get:
      summary: "Get show by ID"
      operationId: getShowById
      tags:
        - shows
      parameters:
        - name: id
          in: path
          description: "Show ID"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "The specified show"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    patch:
      summary: "Modify show"
      operationId: patchShow
      tags:
        - shows
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "Show ID"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Show'
      responses:
        "200":
          description: "The modified show"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: "Delete show"
      operationId: deleteShow
      tags:
        - shows
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "Show ID"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: "Show deleted successfully"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  responses:
    NotAuthorized:
      description: "The request is missing proper authorization"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    
    NotFound:
      description: "The resource was not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
            
    InternalServerError:
      description: "An unexpected error occurred"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    
    APIKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Config:
      type: object
      properties:
        streams:
          type: array
          items:
            $ref: "#/components/schemas/StationStream"
        stationWebsiteURL:
          type: string
      required:
        - streams
        - stationWebsiteURL

    StationStream:
      type: object
      properties:
        name:
          type: string
        extension:
          type: string
        bitrate:
          type: integer
        url:
          type: string
        qualityScore:
          type: integer
      required:
        - name
        - extension
        - bitrate
        - url
        - qualityScore

    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          format: password
      required:
        - email
        - password

    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    
    ArrayOfShows:
      type: array
      items:
        $ref: "#/components/schemas/Show"
    
    Show:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        facebookURL:
          type: string
        twitterURL:
          type: string
        websiteURL:
          type: string
        imageURL:
          type: string
        hosts:
          type: string
        location:
          type: string
        showTime:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        summary:
          type: string
      required:
        - id
        - name
        - imageURL
        - hosts
        - location
        - showTime
        - startTime
        - endTime
        - summary
    
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message
