openapi: 3.0.0
info:
  version: 0.1.0
  title: Radio Station API
servers:
  - url: "http://localhost:8080"
paths:
  /config:
    get:
      summary: "Get station configuration info"
      operationId: getConfig
      tags:
        - config
      responses:
        "200":
          description: "Details about the station configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
        "404":
          description: "No station configuration exists. Create one first."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: "Create station configuration info"
      operationId: postConfig
      tags:
        - config
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        "200":
          description: "The station configuration that was created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        "400":
          description: "Either a station configuration already exists or there was a problem with the format of the request. Check the error for details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
    patch:
      summary: "Update station configuration info"
      operationId: patchConfig
      tags:
        - config
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Config"
      responses:
        "200":
          description: "The updated station configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "404":
          description: "No station configuration exists. Create one first."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /authenticate:
    post:
      summary: "Authenticate with the station"
      operationId: postAuthenticate
      tags:
        - authenticate
      security:
        - BasicAuth: []
      responses:
        "200":
          description: "Access token that can be used to access protected functions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResponse"
        "401":
          description: "Invalid credentials"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"
  
  /shows:
    get:
      summary: "Get list of shows"
      operationId: getShows
      tags:
        - shows
      responses:
        "200":
          description: "Shows"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfShows"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: "Create show"
      operationId: postShows
      tags:
        - shows
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShow'
      responses:
        "201":
          description: "The show that was created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /shows/{id}:
    get:
      summary: "Get show by ID"
      operationId: getShowById
      tags:
        - shows
      parameters:
        - name: id
          in: path
          description: "Show ID"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "The specified show"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    patch:
      summary: "Modify show"
      operationId: patchShow
      tags:
        - shows
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "Show ID"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShow'
      responses:
        "200":
          description: "The modified show"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: "Delete show"
      operationId: deleteShow
      tags:
        - shows
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "Show ID"
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Show deleted successfully"
        "401":
          $ref: "#/components/responses/NotAuthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  responses:
    NotAuthorized:
      description: "The request is missing proper authorization"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    
    NotFound:
      description: "The resource was not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
            
    InternalServerError:
      description: "An unexpected error occurred"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    Config:
      type: object
      properties:
        streams:
          type: array
          items:
            $ref: "#/components/schemas/StationStream"
        stationWebsiteURL:
          type: string
          description: "The station's website URL"
          example: "https://example.com"
      required:
        - streams
        - stationWebsiteURL

    StationStream:
      type: object
      properties:
        name:
          type: string
          description: "The name of the stream"
          example: "MP3 (high bitrate)"
        url:
          type: string
          description: "The stream's URL"
          example: "https://streams.example.com:9000"
        qualityScore:
          type: integer
          format: int64
          description: "The stream's relative quality score, from 1-100."
          example: 100
      required:
        - name
        - url
        - qualityScore

    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
          description: "The token to be used for 'Bearer' authentication in future requests"
          example: "abc123"
        expiresAt:
          type: string
          format: date-time
          description: "The time at which the token expires"
      required:
        - token
        - expiresAt
    
    ArrayOfShows:
      type: array
      items:
        $ref: "#/components/schemas/Show"
    
    Show:
      type: object
      properties:
        id:
          type: string
          description: "The show's identifier"
          example: "abc123"
        name:
          type: string
          description: "The show's name"
          example: "Wobbly Wednesday"
        facebookURL:
          type: string
          description: "The show's Facebook URL, if available"
          example: "https://facebook.com/wobblywednesday"
        twitterURL:
          type: string
          description: "The show's Twitter URL, if available"
          example: "https://twitter.com/wobblywednesday"
        websiteURL:
          type: string
          description: "The show's website"
          example: "https://wobblywednesday.com"
        imageURL:
          type: string
          description: "The show's image"
          example: "https://example.com/show-image.jpg"
        hosts:
          type: string
          description: "The show's hosts"
          example: "Tmart and Tmil"
        location:
          type: string
          description: "The show's location"
          example: "Texas, USA"
        showTime:
          type: string
          description: "The day of the week when the show goes live"
          example: "WEDNESDAY"
        startTime:
          type: string
          format: date-time
          description: "The time that the show goes on-air"
          example: "2020-08-26T00:00:00+00:00"
        endTime:
          type: string
          format: date-time
          description: "The time that the show goes off-air"
          example: "2020-08-26T02:00:00+00:00"
        summary:
          type: string
          description: "The show's summary"
          example: "Turn up the bass for 2 hours of house-shaking bass music!"
      required:
        - id
        - name
        - imageURL
        - hosts
        - location
        - showTime
        - startTime
        - endTime
        - summary
        
    CreateShow:
      type: object
      properties:
        name:
          type: string
          description: "The show's name"
          example: "Wobbly Wednesday"
        facebookURL:
          type: string
          description: "The show's Facebook URL, if available"
          example: "https://facebook.com/wobblywednesday"
        twitterURL:
          type: string
          description: "The show's Twitter URL, if available"
          example: "https://twitter.com/wobblywednesday"
        websiteURL:
          type: string
          description: "The show's website"
          example: "https://wobblywednesday.com"
        imageURL:
          type: string
          description: "The show's image"
          example: "https://example.com/show-image.jpg"
        hosts:
          type: string
          description: "The show's hosts"
          example: "Tmart and Tmil"
        location:
          type: string
          description: "The show's location"
          example: "Texas, USA"
        showTime:
          type: string
          description: "The day of the week when the show goes live"
          example: "WEDNESDAY"
        startTime:
          type: string
          format: date-time
          description: "The time that the show goes on-air"
          example: "2020-08-26T00:00:00+00:00"
        endTime:
          type: string
          format: date-time
          description: "The time that the show goes off-air"
          example: "2020-08-26T02:00:00+00:00"
        summary:
          type: string
          description: "The show's summary"
          example: "Turn up the bass for 2 hours of house-shaking bass music!"
      required:
        - name
        - imageURL
        - hosts
        - location
        - showTime
        - startTime
        - endTime
        - summary
    
    UpdateShow:
      type: object
      properties:
        name:
          type: string
          description: "The show's name"
          example: "Wobbly Wednesday"
        facebookURL:
          type: string
          description: "The show's Facebook URL, if available"
          example: "https://facebook.com/wobblywednesday"
        twitterURL:
          type: string
          description: "The show's Twitter URL, if available"
          example: "https://twitter.com/wobblywednesday"
        websiteURL:
          type: string
          description: "The show's website"
          example: "https://wobblywednesday.com"
        imageURL:
          type: string
          description: "The show's image"
          example: "https://example.com/show-image.jpg"
        hosts:
          type: string
          description: "The show's hosts"
          example: "Tmart and Tmil"
        location:
          type: string
          description: "The show's location"
          example: "Texas, USA"
        showTime:
          type: string
          description: "The day of the week when the show goes live"
          example: "WEDNESDAY"
        startTime:
          type: string
          format: date-time
          description: "The time that the show goes on-air"
          example: "2020-08-26T00:00:00+00:00"
        endTime:
          type: string
          format: date-time
          description: "The time that the show goes off-air"
          example: "2020-08-26T02:00:00+00:00"
        summary:
          type: string
          description: "The show's summary"
          example: "Turn up the bass for 2 hours of house-shaking bass music!"
    
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message
